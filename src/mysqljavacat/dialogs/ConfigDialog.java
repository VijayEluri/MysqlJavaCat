/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfigDialog.java
 *
 * Created on Nov 25, 2010, 3:16:13 PM
 */

package mysqljavacat.dialogs;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import mysqljavacat.MysqlJavaCatApp;
import mysqljavacat.databaseobjects.Connection;

/**
 *
 * @author strelok
 */
public class ConfigDialog extends javax.swing.JDialog {
    private Connection cur_con;
    
    private void saveConn(){
        cur_con.dbHost = hostField.getText();
        if(!portField.getText().isEmpty())
            cur_con.dbPort = portField.getText();
        cur_con.dbUser = userField.getText();
        cur_con.dbPassword = new String(passField.getPassword());
        cur_con.SSHHost = sshHost.getText();
        cur_con.SSHUser = sshUser.getText();
        cur_con.SSHPass = new String(sshPass.getPassword());                
        cur_con.UseSSH = useSSHTun.isSelected();   
        cur_con.charset = (String)connectionCharset.getSelectedItem();
        cur_con.save();
    }
    public void saveConnectionAndProps(){
        saveConn();
        Preferences prop = MysqlJavaCatApp.getApplication().getProperties();
        prop.putBoolean("connectOnStartUp", connectOnStartup.isSelected());        
    }
    public void loadConnectionProps(){        
        hostField.setText(cur_con.dbHost);
        portField.setText(cur_con.dbPort);
        userField.setText(cur_con.dbUser);
        passField.setText(cur_con.dbPassword);
        sshHost.setText(cur_con.SSHHost);
        sshUser.setText(cur_con.SSHUser);
        sshPass.setText(cur_con.SSHPass);
        useSSHTun.setSelected(cur_con.UseSSH);
        connectionCharset.setSelectedItem(cur_con.charset);
        
    }

    public Connection getCurConnect(){
        return cur_con;
    }

    public ConfigDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        
        Preferences prop = MysqlJavaCatApp.getApplication().getProperties();
        ArrayList<Connection> connections = Connection.getConnections();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        connectCombo.setModel(model);
        if(connections.isEmpty()){
            newConActionPerformed(null);
            prop.putBoolean("connectOnStartUp",false);           
        }else{            
            for(Connection con : connections){
                model.addElement(con);
                if(prop.get("current_con","").equals(con.name)){
                    cur_con = con;
                    model.setSelectedItem(con);
                }
            }
            if(cur_con == null){
                cur_con = connections.get(0);
                model.setSelectedItem(connections.get(0));
            }            
        }
        
        if(prop.getBoolean("connectOnStartUp",false))
            connectOnStartup.setSelected(true);
        
        setResizable(false);

        KeyListener input_listener= new KeyListener() {

            public void keyTyped(KeyEvent e) {
                saveCon.setEnabled(true);
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {
            }
        };
        userField.addKeyListener(input_listener);
        
        userField.addKeyListener(input_listener);
        hostField.addKeyListener(input_listener);
        portField.addKeyListener(input_listener);
        passField.addKeyListener(input_listener);
        sshHost.addKeyListener(input_listener);
        sshUser.addKeyListener(input_listener);
        sshPass.addKeyListener(input_listener);
        connectionCharset.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent ie) {
                saveCon.setEnabled(true);
            }
        });
        useSSHTun.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                saveCon.setEnabled(true);
            }
        });

    }
       
           

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hostField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userField = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        useSSHTun = new javax.swing.JCheckBox();
        sshHost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sshUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sshPass = new javax.swing.JPasswordField();
        connectOnStartup = new javax.swing.JCheckBox();
        testConnection = new javax.swing.JButton();
        connectCombo = new javax.swing.JComboBox();
        newCon = new javax.swing.JButton();
        saveCon = new javax.swing.JButton();
        DeleteCon = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        editConName = new javax.swing.JButton();
        connectionCharset = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mysqljavacat.MysqlJavaCatApp.class).getContext().getResourceMap(ConfigDialog.class);
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        hostField.setName("hostField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        userField.setName("userField"); // NOI18N

        passField.setName("passField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        portField.setName("portField"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(portField)
                    .addComponent(passField)
                    .addComponent(userField, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(hostField))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Connection", jPanel1);

        jPanel2.setName("jPanel2"); // NOI18N

        useSSHTun.setText(resourceMap.getString("useSSHTun.text")); // NOI18N
        useSSHTun.setName("useSSHTun"); // NOI18N
        useSSHTun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                useSSHTunMouseClicked(evt);
            }
        });

        sshHost.setEnabled(false);
        sshHost.setName("sshHost"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        sshUser.setEnabled(false);
        sshUser.setName("sshUser"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        sshPass.setEnabled(false);
        sshPass.setName("sshPass"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(useSSHTun)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sshUser, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(sshPass, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(sshHost, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(useSSHTun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sshHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sshUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sshPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        connectOnStartup.setText(resourceMap.getString("connectOnStartup.text")); // NOI18N
        connectOnStartup.setName("connectOnStartup"); // NOI18N

        testConnection.setText(resourceMap.getString("testConnection.text")); // NOI18N
        testConnection.setName("testConnection"); // NOI18N
        testConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testConnectionActionPerformed(evt);
            }
        });

        connectCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        connectCombo.setName("connectCombo"); // NOI18N
        connectCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                connectComboItemStateChanged(evt);
            }
        });

        newCon.setText(resourceMap.getString("newCon.text")); // NOI18N
        newCon.setName("newCon"); // NOI18N
        newCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newConActionPerformed(evt);
            }
        });

        saveCon.setText(resourceMap.getString("saveCon.text")); // NOI18N
        saveCon.setEnabled(false);
        saveCon.setName("saveCon"); // NOI18N
        saveCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveConActionPerformed(evt);
            }
        });

        DeleteCon.setText(resourceMap.getString("DeleteCon.text")); // NOI18N
        DeleteCon.setName("DeleteCon"); // NOI18N
        DeleteCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteConActionPerformed(evt);
            }
        });

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        editConName.setText(resourceMap.getString("editConName.text")); // NOI18N
        editConName.setName("editConName"); // NOI18N
        editConName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editConNameActionPerformed(evt);
            }
        });

        connectionCharset.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "utf-8", "cp1251" }));
        connectionCharset.setName("connectionCharset"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newCon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveCon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteCon))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(connectCombo, 0, 246, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editConName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testConnection))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(connectionCharset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(connectOnStartup)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCon)
                    .addComponent(saveCon)
                    .addComponent(DeleteCon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(connectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editConName))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectionCharset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectOnStartup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton)
                    .addComponent(testConnection))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        loadConnectionProps();
        saveCon.setEnabled(false);        
        ArrayList<Connection> to_rem = new ArrayList<Connection>();
        for(int i = 0;connectCombo.getModel().getSize() > i;i = i + 1){            
            if(!((Connection)connectCombo.getModel().getElementAt(i)).isSaved()){
                to_rem.add((Connection)connectCombo.getModel().getElementAt(i));
            }
        }        
        for(Connection c : to_rem){
            ((DefaultComboBoxModel) connectCombo.getModel()).removeElement(c);
        }
        connectCombo.setSelectedItem(MysqlJavaCatApp.getApplication().getEstablishedConnection());        
        
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            MysqlJavaCatApp.getApplication().getProperties().put("current_con", cur_con.name);
            saveConnectionAndProps();
            java.sql.Connection db_connect = MysqlJavaCatApp.getApplication().setupConnection(cur_con);
            if(db_connect != null){
                setVisible(false);
                MysqlJavaCatApp.getApplication().getView().proxyRunConnect();
                cur_con.save();
            }
        } catch (SQLException ex) {            
            MysqlJavaCatApp.getApplication().showError(ex.getMessage());
        } catch (ClassNotFoundException ex) {
            MysqlJavaCatApp.getApplication().showError(ex.getMessage());
        }

    }//GEN-LAST:event_okButtonActionPerformed

    private void useSSHTunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_useSSHTunMouseClicked
        sshHost.setEnabled(useSSHTun.isSelected());
        sshUser.setEnabled(useSSHTun.isSelected());
        sshPass.setEnabled(useSSHTun.isSelected());
    }//GEN-LAST:event_useSSHTunMouseClicked

    private void testConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testConnectionActionPerformed
        try {
            saveConnectionAndProps();
            java.sql.Connection db_connect = MysqlJavaCatApp.getApplication().setupConnection(cur_con);
            if(db_connect != null)
                JOptionPane.showMessageDialog(this,"OK","Connection OK!",JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            MysqlJavaCatApp.getApplication().showError(ex.getMessage());
        } catch (ClassNotFoundException ex) {
            MysqlJavaCatApp.getApplication().showError(ex.getMessage());
        }
    }//GEN-LAST:event_testConnectionActionPerformed

    private void connectComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_connectComboItemStateChanged
        cur_con = (Connection)evt.getItem();
        loadConnectionProps();
    }//GEN-LAST:event_connectComboItemStateChanged

    private void editConNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editConNameActionPerformed
        String inputed = JOptionPane.showInputDialog("Input connection name",connectCombo.getModel().getSelectedItem()); 
        cur_con.name = inputed.isEmpty() ? cur_con.name : inputed;
        connectCombo.repaint();
    }//GEN-LAST:event_editConNameActionPerformed

    private void saveConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveConActionPerformed
        saveCon.setEnabled(false);
        saveConn();
    }//GEN-LAST:event_saveConActionPerformed

    private void newConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newConActionPerformed

        ArrayList<Connection> connections = new ArrayList<Connection>();
        for(int i = 0; i < ((DefaultComboBoxModel)connectCombo.getModel()).getSize();i++){
            connections.add((Connection)connectCombo.getModel().getElementAt(i));
        }
        cur_con = new Connection(connections);        
        ((DefaultComboBoxModel)connectCombo.getModel()).addElement(cur_con);
        saveCon.setEnabled(true);
        connectCombo.setSelectedItem(cur_con);
    }//GEN-LAST:event_newConActionPerformed

    private void DeleteConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteConActionPerformed
        cur_con.remove();
        connectCombo.removeItem(cur_con);        
    }//GEN-LAST:event_DeleteConActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteCon;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox connectCombo;
    private javax.swing.JCheckBox connectOnStartup;
    private javax.swing.JComboBox connectionCharset;
    private javax.swing.JButton editConName;
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton newCon;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField portField;
    private javax.swing.JButton saveCon;
    private javax.swing.JTextField sshHost;
    private javax.swing.JPasswordField sshPass;
    private javax.swing.JTextField sshUser;
    private javax.swing.JButton testConnection;
    private javax.swing.JCheckBox useSSHTun;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables

}
