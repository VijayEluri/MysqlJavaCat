/*
 * MysqlJavaCatAboutBox.java
 */

package mysqljavacat.dialogs;

import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import mysqljavacat.MysqlJavaCatApp;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

public class MysqlJavaCatAboutBox extends javax.swing.JDialog {
    
    public MysqlJavaCatAboutBox(java.awt.Frame parent) {
        super(parent);
        initComponents();
        jProgressBar1.setVisible(false);
        jLabel1.setVisible(false);
        upgradeButton.setVisible(false);
        statusAnimationLabel.setVisible(false);
        
        
        getRootPane().setDefaultButton(closeButton);        
    }

    @Action public void closeAboutBox() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        javax.swing.JLabel appTitleLabel = new javax.swing.JLabel();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        appVersionLabel = new javax.swing.JLabel();
        javax.swing.JLabel vendorLabel = new javax.swing.JLabel();
        javax.swing.JLabel appVendorLabel = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        javax.swing.JLabel appHomepageLabel = new javax.swing.JLabel();
        upgradeButton = new javax.swing.JButton();
        javax.swing.JLabel imageLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        statusAnimationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mysqljavacat.MysqlJavaCatApp.class).getContext().getResourceMap(MysqlJavaCatAboutBox.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setModal(true);
        setName("aboutBox"); // NOI18N
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                checkVersion(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mysqljavacat.MysqlJavaCatApp.class).getContext().getActionMap(MysqlJavaCatAboutBox.class, this);
        closeButton.setAction(actionMap.get("closeAboutBox")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N

        appTitleLabel.setFont(appTitleLabel.getFont().deriveFont(appTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, appTitleLabel.getFont().getSize()+4));
        appTitleLabel.setText(resourceMap.getString("Application.title")); // NOI18N
        appTitleLabel.setName("appTitleLabel"); // NOI18N

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD));
        versionLabel.setText(resourceMap.getString("versionLabel.text")); // NOI18N
        versionLabel.setName("versionLabel"); // NOI18N

        appVersionLabel.setText(resourceMap.getString("Application.version")); // NOI18N
        appVersionLabel.setName("appVersionLabel"); // NOI18N

        vendorLabel.setFont(vendorLabel.getFont().deriveFont(vendorLabel.getFont().getStyle() | java.awt.Font.BOLD));
        vendorLabel.setText(resourceMap.getString("vendorLabel.text")); // NOI18N
        vendorLabel.setName("vendorLabel"); // NOI18N

        appVendorLabel.setText(resourceMap.getString("Application.vendor")); // NOI18N
        appVendorLabel.setName("appVendorLabel"); // NOI18N

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel.setText(resourceMap.getString("homepageLabel.text")); // NOI18N
        homepageLabel.setName("homepageLabel"); // NOI18N

        appHomepageLabel.setText(resourceMap.getString("Application.homepage")); // NOI18N
        appHomepageLabel.setName("appHomepageLabel"); // NOI18N

        upgradeButton.setAction(actionMap.get("update")); // NOI18N
        upgradeButton.setText(resourceMap.getString("upgradeButton.text")); // NOI18N
        upgradeButton.setName("upgradeButton"); // NOI18N

        imageLabel.setIcon(resourceMap.getIcon("imageLabel.icon")); // NOI18N
        imageLabel.setMaximumSize(null);
        imageLabel.setMinimumSize(null);
        imageLabel.setName("imageLabel"); // NOI18N
        imageLabel.setPreferredSize(null);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jProgressBar1.setName("jProgressBar1"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setIcon(resourceMap.getIcon("statusAnimationLabel.icon")); // NOI18N
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(versionLabel)
                                    .addComponent(vendorLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(appVersionLabel)
                                            .addComponent(appVendorLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(statusAnimationLabel))))
                            .addComponent(appTitleLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(appHomepageLabel))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(homepageLabel)
                        .addGap(46, 46, 46))
                    .addComponent(upgradeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 389, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(appTitleLabel)
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(versionLabel)
                                            .addComponent(appVersionLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(vendorLabel)
                                            .addComponent(appVendorLabel)))
                                    .addComponent(statusAnimationLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(homepageLabel)
                                    .addComponent(appHomepageLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(upgradeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void checkVersion(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_checkVersion
        MysqlJavaCatApp app = MysqlJavaCatApp.getApplication(); 
        appVersionLabel.setText(app.VERSION);
        jProgressBar1.setVisible(false);
        jLabel1.setVisible(false);
        upgradeButton.setVisible(false);        
        Task queryTask = new Task(app) {
            @Override
            protected Object doInBackground() throws Exception {               
                String version = "";
                try {
                    URL check_version;
                    check_version = new URL("https://raw.github.com/strelok1111/MysqlJavaCat/master/VERSION");

                    URLConnection yc = check_version.openConnection();
                    BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));

                    String inputLine;
                    if ((inputLine = in.readLine()) != null)
                        version = inputLine;
                    in.close();
                }catch(Exception e){
                }
                statusAnimationLabel.setVisible(false);
                if(!MysqlJavaCatApp.getApplication().VERSION.equals(version)){                     
                     upgradeButton.setVisible(true);
                     upgradeButton.setEnabled(true);
                     upgradeButton.setText("Upgrade to " + version);
                }
                return null;
            }
        };
        statusAnimationLabel.setVisible(true);
        app.getContext().getTaskService().execute(queryTask);
        app.getContext().getTaskMonitor().setForegroundTask(queryTask);
}//GEN-LAST:event_checkVersion

    @Action
    public void update() {        
        
        MysqlJavaCatApp app = MysqlJavaCatApp.getApplication();
        Task queryTask = new Task(app) {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    
                    String url = "";
                    String tempfile = "";
                    String currentOs = System.getProperty("os.name").toUpperCase();
                    
                    if(currentOs.startsWith("LINUX")){
                        url = "https://github.com/strelok1111/MysqlJavaCat/raw/master/MysqlJavaCat.deb";
                        tempfile = System.getProperty("java.io.tmpdir") + "/MysqlJavaCat.deb";
                    }else if(currentOs.startsWith("WINDOWS")){
                        url = "https://github.com/strelok1111/MysqlJavaCat/raw/master/Win/mysqljavacat_win_dist.exe";
                        tempfile = System.getProperty("java.io.tmpdir") + "mysqljavacat_win_dist.exe"; 
                    }
                    
                    
                    URL check_version;
                    check_version = new URL(url);
                    
                    HttpURLConnection huc =  ( HttpURLConnection )  check_version.openConnection (  ) ;
                    huc.setRequestMethod("GET");  
                    huc.connect();
                    InputStream is = huc.getInputStream();                    
                    int totBytes,bytes,sumBytes = 0;
                    byte buffer[] = new byte[1024];
                    totBytes = huc.getContentLength () ;
                    if  ( huc.getResponseCode() == HttpURLConnection.HTTP_OK ) {
                        jProgressBar1.setVisible(true);
                        jProgressBar1.setMaximum(totBytes);
                        FileOutputStream fos = new FileOutputStream(tempfile);
                        while  ( (bytes = is.read(buffer, 0, 1024)) != -1)  {       
                            sumBytes += bytes;
                            fos.write ( buffer,0,bytes ) ; 
                            jProgressBar1.setValue(sumBytes);
                            jLabel1.setText("Downloaded " + sumBytes/1024 + " Kb of" + totBytes/1024 + " Kb.");                        
                        }  
                        fos.close(); 
                        Runtime run = Runtime.getRuntime();
                        if(currentOs.startsWith("LINUX")){
                            String cmd = "mysqljavacat_deb_update " + tempfile + " &";
                            Process pr = run.exec(cmd);                       
                        }else if(currentOs.startsWith("WINDOWS")){
                            run.exec("cmd.exe /c start /B " + tempfile);
                        }
                        jLabel1.setText("Now you need to restart app.");
                    }else{
                        jLabel1.setText("Error download file.");
                    }  
                    huc.disconnect();
                    
                }catch(Exception e){
                    System.out.println(e);
                }
                
                return null;
            }
        };
        jLabel1.setVisible(true);        
        upgradeButton.setEnabled(false);
        app.getContext().getTaskService().execute(queryTask);
        app.getContext().getTaskMonitor().setForegroundTask(queryTask);
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appVersionLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JButton upgradeButton;
    // End of variables declaration//GEN-END:variables
    
}
